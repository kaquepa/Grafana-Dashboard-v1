version: '3.8'

services:
  # -----------------------------
  # PostgreSQL
  # -----------------------------
  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: secure_password_123
      POSTGRES_DB: grafana
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./infrastructure/01_init.sql:/docker-entrypoint-initdb.d/01_init.sql:ro
      - ./infrastructure/02_tables.sql:/docker-entrypoint-initdb.d/02_tables.sql:ro
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d grafana"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - monitoring
    # Configura√ß√£o de logs mais limpa
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # -----------------------------
  # Adminer
  # -----------------------------
  adminer:
    image: adminer
    container_name: adminer
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      ADMINER_DEFAULT_SERVER: postgres
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - monitoring
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "2"

  # -----------------------------
  # Grafana (Vers√£o Super Limpa)
  # -----------------------------
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    environment:
      # Configura√ß√£o m√≠nima - arquivo grafana.ini faz o resto
      GF_PATHS_CONFIG: /grafana/grafana.ini
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini:ro
    restart: unless-stopped
    networks:
      - monitoring
    # Logs super limpos
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "1"

  # -----------------------------
  # Python App
  # -----------------------------
  python-app:
    build: ./python-app
    container_name: python_app
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://postgres:secure_password_123@postgres:5432/grafana
    volumes:
      - ./python-app:/app
    working_dir: /app
    command: >
      sh -c "echo 'üêç Executando main.py...' &&
             python -u main.py &&
             echo '‚úÖ Execu√ß√£o conclu√≠da com sucesso!' &&
             echo '‚è≥ Mantendo container ativo para debugging...' &&
             tail -f /dev/null"
    restart: unless-stopped
    networks:
      - monitoring
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "2"

volumes:
  postgres_data:
  grafana_data:

networks:
  monitoring:
    driver: bridge